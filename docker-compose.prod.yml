version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tye-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tye_all_in_one
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tye-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: tye-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - tye-network

  app:
    image: ${DOCKER_USERNAME}/tye-all-in-one:latest
    container_name: tye-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - REDIS_URL=redis://redis:6379
      - GOOGLE_CLOUD_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - ./uploads:/app/public/uploads
      - ./google-credentials.json:/app/google-credentials.json:ro
    networks:
      - tye-network
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:alpine
    container_name: tye-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - tye-network
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data:

networks:
  tye-network:
    driver: bridge