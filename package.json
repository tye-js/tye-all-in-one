{
  "name": "tye-all-in-one",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "dev:turbo": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:all": "npm run test:ci && npm run test:e2e",
    "type-check": "tsc --noEmit",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:push": "drizzle-kit push",
    "db:studio": "drizzle-kit studio",
    "db:seed": "tsx src/lib/db/seed.ts",
    "db:setup": "tsx scripts/setup-database.ts",
    "db:seed-custom": "tsx scripts/seed-database.ts",
    "db:reset": "npm run db:setup && npm run db:seed-custom",
    "db:migrate-content": "tsx scripts/migrate-content-processing.ts",
    "test:article-page": "tsx scripts/test-article-page.ts",
    "test:improvements": "tsx scripts/test-improvements.ts",
    "setup:voice-sync": "tsx scripts/setup-voice-sync.ts",
    "sync:voices": "tsx -e \"import { voiceSyncService } from './src/lib/voice-sync'; voiceSyncService.syncVoicesToDatabase().then(r => console.log('Sync result:', r)).catch(console.error)\"",
    "fix:voice-table": "tsx scripts/fix-voice-table.ts",
    "test:voice-sync": "tsx scripts/test-voice-sync.ts",
    "migrate:voice-fields": "tsx scripts/migrate-voice-fields.ts",
    "test:voice-fields": "tsx scripts/test-voice-fields.ts",
    "test:optimized-query": "tsx scripts/test-optimized-query.ts",
    "test:structured-query": "tsx scripts/test-structured-query.ts"
  },
  "dependencies": {
    "@google-cloud/text-to-speech": "^6.1.0",
    "@hookform/resolvers": "^5.1.1",
    "@mdx-js/loader": "^3.1.0",
    "@mdx-js/react": "^3.1.0",
    "@next/mdx": "^15.3.3",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@types/bcryptjs": "^2.4.6",
    "@types/pg": "^8.15.4",
    "@types/uuid": "^10.0.0",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "drizzle-kit": "^0.31.1",
    "drizzle-orm": "^0.44.2",
    "lucide-react": "^0.516.0",
    "next": "^15.3.3",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.6",
    "postgres": "^3.4.7",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.58.0",
    "react-markdown": "^10.1.0",
    "rehype-highlight": "^7.0.2",
    "rehype-raw": "^7.0.0",
    "rehype-stringify": "^10.0.1",
    "remark-gfm": "^4.0.1",
    "remark-parse": "^11.0.0",
    "remark-rehype": "^11.1.2",
    "sonner": "^2.0.5",
    "tailwind-merge": "^3.3.1",
    "unified": "^11.0.5",
    "unist-util-visit": "^5.0.0",
    "uuid": "^11.1.0",
    "zod": "^3.25.67"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.53.0",
    "@tailwindcss/postcss": "^4",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "^15.3.3",
    "jest": "^30.0.0",
    "jest-environment-jsdom": "^30.0.0",
    "tailwindcss": "^4",
    "tsx": "^4.20.3",
    "tw-animate-css": "^1.3.4",
    "typescript": "^5"
  }
}
